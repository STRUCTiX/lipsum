name: build

on:
  pull_request:
  push:
    branches:
      - master

env:
  CARGO_TERM_COLOR: always
  FORCE_COLOR: 3
  RUSTFLAGS: -D warnings

jobs:

  build:
    name: Build
    strategy:
      matrix:
        rust:
          - stable
          - nightly
        os:
          - ubuntu-latest
          - window-latest
        exclude:
          - rust: nightly
            os: window-latest
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install ${{ matrix.rust }} Rust
        run: rustup default ${{ matrix.rust }}

      - uses: Swatinem/rust-cache@v1

      - name: Test
        run: cargo test

  # This builds examples and benchmarks, which are not covered above.
  build-all:
    name: Build all targets
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install nightly Rust
        run: rustup default nightly

      - uses: Swatinem/rust-cache@v1

      - name: Build all targets
        run: cargo build --all-targets

  build-documentation:
    name: Build documentation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - uses: Swatinem/rust-cache@v1

      - name: Build documentation and check intra-doc links
        env:
          RUSTDOCFLAGS: --deny rustdoc::broken_intra_doc_links
        run: cargo doc --no-deps

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - uses: Swatinem/rust-cache@v1

      - name: Clippy with default lints
        run: cargo clippy

      - name: Lint for left-over debug prints
        run: cargo clippy -- -D clippy::print_stdout -D clippy::print_stderr
